name: Build Android APK (Simple)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Install dependencies
      run: npm ci
      
    - name: Create Firebase config file
      run: |
        cat > firebase-service-account.json << EOF
        {
          "type": "service_account",
          "project_id": "sentinel-ai-769c5",
          "private_key_id": "${{ secrets.FIREBASE_PRIVATE_KEY_ID }}",
          "private_key": "${{ secrets.FIREBASE_PRIVATE_KEY }}",
          "client_email": "${{ secrets.FIREBASE_CLIENT_EMAIL }}",
          "client_id": "${{ secrets.FIREBASE_CLIENT_ID }}",
          "auth_uri": "https://accounts.google.com/o/oauth2/auth",
          "token_uri": "https://oauth2.googleapis.com/token",
          "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
          "client_x509_cert_url": "${{ secrets.FIREBASE_CLIENT_CERT_URL }}"
        }
        EOF
        
    - name: Create basic assets
      run: |
        mkdir -p assets
        # Create a simple 1x1 transparent PNG
        echo "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==" | base64 -d > assets/icon.png
        cp assets/icon.png assets/splash.png
        cp assets/icon.png assets/adaptive-icon.png
        cp assets/icon.png assets/favicon.png
        echo "Assets created successfully"
        
    - name: Install Expo CLI
      run: npm install -g @expo/cli
      
    - name: Prebuild for Android
      run: |
        npx expo install --fix
        npx expo prebuild --platform android --clear
        
    - name: Build Android APK
      run: |
        cd android
        chmod +x ./gradlew
        ./gradlew assembleRelease --no-daemon --stacktrace
        
    - name: Find and prepare APK
      run: |
        # Find the built APK
        APK_PATH=$(find android/app/build/outputs/apk -name "*.apk" | head -1)
        if [ -n "$APK_PATH" ]; then
          # Create output directory
          mkdir -p build-output
          # Copy and rename APK with timestamp
          TIMESTAMP=$(date +%Y%m%d_%H%M%S)
          cp "$APK_PATH" "build-output/sentinel-copilot-${TIMESTAMP}.apk"
          echo "APK built successfully: sentinel-copilot-${TIMESTAMP}.apk"
          ls -la build-output/
          echo "APK_FILE=sentinel-copilot-${TIMESTAMP}.apk" >> $GITHUB_ENV
        else
          echo "No APK found"
          find android -name "*.apk" -type f
          exit 1
        fi
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: sentinel-copilot-apk
        path: build-output/*.apk
        retention-days: 30
        
    - name: Create Release
      if: github.ref == 'refs/heads/main'
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v1.0.${{ github.run_number }}
        release_name: Sentinel Copilot v1.0.${{ github.run_number }}
        body: |
          ðŸš€ **Sentinel Copilot Mobile App**
          
          âœ¨ **Funcionalidades:**
          - Dashboard com mÃ©tricas em tempo real
          - Sistema de viagens inteligente
          - InspeÃ§Ãµes com IA
          - Chatbot ADA com vÃ­deo interativo
          - IntegraÃ§Ã£o Firebase completa
          
          ðŸ“± **Download do APK:**
          Baixe o arquivo APK anexado para instalar no Android.
          
          ðŸ”§ **VersÃ£o:** 1.0.${{ github.run_number }}
          ðŸ“… **Data:** ${{ github.event.head_commit.timestamp }}
          
        draft: false
        prerelease: false
        
    - name: Upload APK to Release
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build-output/${{ env.APK_FILE }}
        asset_name: sentinel-copilot-v1.0.${{ github.run_number }}.apk
        asset_content_type: application/vnd.android.package-archive

